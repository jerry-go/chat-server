// Code generated by protoc-gen-go. DO NOT EDIT.
// source: thirdapi.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	thirdapi.proto

It has these top-level messages:
	Nil
	Bool
	SmsRequest
	InfoVerifyRequest
	Idcard
	Bankcard
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// 硬编码任务id.
type TaskId int32

const (
	TaskId_ALL       TaskId = 0
	TaskId_CDKEY_ID  TaskId = 1
	TaskId_INVITE_ID TaskId = 2
)

var TaskId_name = map[int32]string{
	0: "ALL",
	1: "CDKEY_ID",
	2: "INVITE_ID",
}
var TaskId_value = map[string]int32{
	"ALL":       0,
	"CDKEY_ID":  1,
	"INVITE_ID": 2,
}

func (x TaskId) String() string {
	return proto1.EnumName(TaskId_name, int32(x))
}
func (TaskId) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 硬编码礼包状态.
type GiftStatus int32

const (
	GiftStatus_WAIT_RECEIVE    GiftStatus = 0
	GiftStatus_RECEIVE_SUCCESS GiftStatus = 1
)

var GiftStatus_name = map[int32]string{
	0: "WAIT_RECEIVE",
	1: "RECEIVE_SUCCESS",
}
var GiftStatus_value = map[string]int32{
	"WAIT_RECEIVE":    0,
	"RECEIVE_SUCCESS": 1,
}

func (x GiftStatus) String() string {
	return proto1.EnumName(GiftStatus_name, int32(x))
}
func (GiftStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Nil struct {
}

func (m *Nil) Reset()                    { *m = Nil{} }
func (m *Nil) String() string            { return proto1.CompactTextString(m) }
func (*Nil) ProtoMessage()               {}
func (*Nil) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Bool struct {
	Value bool `protobuf:"varint,1,opt,name=value" json:"value"`
}

func (m *Bool) Reset()                    { *m = Bool{} }
func (m *Bool) String() string            { return proto1.CompactTextString(m) }
func (*Bool) ProtoMessage()               {}
func (*Bool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Bool) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 短信服务
type SmsRequest struct {
	PhoneList    []string `protobuf:"bytes,1,rep,name=phone_list,json=phoneList" json:"phone_list"`
	Content      string   `protobuf:"bytes,2,opt,name=content" json:"content"`
	Code         string   `protobuf:"bytes,3,opt,name=code" json:"code"`
	CodeValidDur int64    `protobuf:"varint,4,opt,name=code_valid_dur,json=codeValidDur" json:"code_valid_dur"`
}

func (m *SmsRequest) Reset()                    { *m = SmsRequest{} }
func (m *SmsRequest) String() string            { return proto1.CompactTextString(m) }
func (*SmsRequest) ProtoMessage()               {}
func (*SmsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SmsRequest) GetPhoneList() []string {
	if m != nil {
		return m.PhoneList
	}
	return nil
}

func (m *SmsRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *SmsRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SmsRequest) GetCodeValidDur() int64 {
	if m != nil {
		return m.CodeValidDur
	}
	return 0
}

// 信息核验
type InfoVerifyRequest struct {
	IdcardNo   string `protobuf:"bytes,1,opt,name=idcard_no,json=idcardNo" json:"idcard_no"`
	Realname   string `protobuf:"bytes,2,opt,name=realname" json:"realname"`
	BankcardNo string `protobuf:"bytes,3,opt,name=bankcard_no,json=bankcardNo" json:"bankcard_no"`
	Phone      string `protobuf:"bytes,4,opt,name=phone" json:"phone"`
}

func (m *InfoVerifyRequest) Reset()                    { *m = InfoVerifyRequest{} }
func (m *InfoVerifyRequest) String() string            { return proto1.CompactTextString(m) }
func (*InfoVerifyRequest) ProtoMessage()               {}
func (*InfoVerifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *InfoVerifyRequest) GetIdcardNo() string {
	if m != nil {
		return m.IdcardNo
	}
	return ""
}

func (m *InfoVerifyRequest) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *InfoVerifyRequest) GetBankcardNo() string {
	if m != nil {
		return m.BankcardNo
	}
	return ""
}

func (m *InfoVerifyRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type Idcard struct {
	Cardno   string `protobuf:"bytes,1,opt,name=cardno" json:"cardno"`
	Realname string `protobuf:"bytes,2,opt,name=realname" json:"realname"`
}

func (m *Idcard) Reset()                    { *m = Idcard{} }
func (m *Idcard) String() string            { return proto1.CompactTextString(m) }
func (*Idcard) ProtoMessage()               {}
func (*Idcard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Idcard) GetCardno() string {
	if m != nil {
		return m.Cardno
	}
	return ""
}

func (m *Idcard) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

type Bankcard struct {
	IdcardNo   string `protobuf:"bytes,1,opt,name=idcard_no,json=idcardNo" json:"idcard_no"`
	Realname   string `protobuf:"bytes,2,opt,name=realname" json:"realname"`
	BankcardNo string `protobuf:"bytes,3,opt,name=bankcard_no,json=bankcardNo" json:"bankcard_no"`
	CardType   string `protobuf:"bytes,4,opt,name=card_type,json=cardType" json:"card_type"`
	Bankname   string `protobuf:"bytes,5,opt,name=bankname" json:"bankname"`
	Phone      string `protobuf:"bytes,6,opt,name=phone" json:"phone"`
}

func (m *Bankcard) Reset()                    { *m = Bankcard{} }
func (m *Bankcard) String() string            { return proto1.CompactTextString(m) }
func (*Bankcard) ProtoMessage()               {}
func (*Bankcard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Bankcard) GetIdcardNo() string {
	if m != nil {
		return m.IdcardNo
	}
	return ""
}

func (m *Bankcard) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *Bankcard) GetBankcardNo() string {
	if m != nil {
		return m.BankcardNo
	}
	return ""
}

func (m *Bankcard) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *Bankcard) GetBankname() string {
	if m != nil {
		return m.Bankname
	}
	return ""
}

func (m *Bankcard) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func init() {
	proto1.RegisterType((*Nil)(nil), "proto.Nil")
	proto1.RegisterType((*Bool)(nil), "proto.Bool")
	proto1.RegisterType((*SmsRequest)(nil), "proto.SmsRequest")
	proto1.RegisterType((*InfoVerifyRequest)(nil), "proto.InfoVerifyRequest")
	proto1.RegisterType((*Idcard)(nil), "proto.Idcard")
	proto1.RegisterType((*Bankcard)(nil), "proto.Bankcard")
	proto1.RegisterEnum("proto.TaskId", TaskId_name, TaskId_value)
	proto1.RegisterEnum("proto.GiftStatus", GiftStatus_name, GiftStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ThirdApi service

type ThirdApiClient interface {
	// -------------------- 短信服务 --------------------
	SendSmsMessage(ctx context.Context, in *SmsRequest, opts ...grpc.CallOption) (*Bool, error)
	SendSmsCode(ctx context.Context, in *SmsRequest, opts ...grpc.CallOption) (*Bool, error)
	VerifySmsCode(ctx context.Context, in *SmsRequest, opts ...grpc.CallOption) (*Bool, error)
	// -------------------- 信息核验 --------------------
	VerifyIdcard(ctx context.Context, in *InfoVerifyRequest, opts ...grpc.CallOption) (*Idcard, error)
	VerifyBankcard(ctx context.Context, in *InfoVerifyRequest, opts ...grpc.CallOption) (*Bankcard, error)
}

type thirdApiClient struct {
	cc *grpc.ClientConn
}

func NewThirdApiClient(cc *grpc.ClientConn) ThirdApiClient {
	return &thirdApiClient{cc}
}

func (c *thirdApiClient) SendSmsMessage(ctx context.Context, in *SmsRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := grpc.Invoke(ctx, "/proto.ThirdApi/SendSmsMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdApiClient) SendSmsCode(ctx context.Context, in *SmsRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := grpc.Invoke(ctx, "/proto.ThirdApi/SendSmsCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdApiClient) VerifySmsCode(ctx context.Context, in *SmsRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := grpc.Invoke(ctx, "/proto.ThirdApi/VerifySmsCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdApiClient) VerifyIdcard(ctx context.Context, in *InfoVerifyRequest, opts ...grpc.CallOption) (*Idcard, error) {
	out := new(Idcard)
	err := grpc.Invoke(ctx, "/proto.ThirdApi/VerifyIdcard", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdApiClient) VerifyBankcard(ctx context.Context, in *InfoVerifyRequest, opts ...grpc.CallOption) (*Bankcard, error) {
	out := new(Bankcard)
	err := grpc.Invoke(ctx, "/proto.ThirdApi/VerifyBankcard", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ThirdApi service

type ThirdApiServer interface {
	// -------------------- 短信服务 --------------------
	SendSmsMessage(context.Context, *SmsRequest) (*Bool, error)
	SendSmsCode(context.Context, *SmsRequest) (*Bool, error)
	VerifySmsCode(context.Context, *SmsRequest) (*Bool, error)
	// -------------------- 信息核验 --------------------
	VerifyIdcard(context.Context, *InfoVerifyRequest) (*Idcard, error)
	VerifyBankcard(context.Context, *InfoVerifyRequest) (*Bankcard, error)
}

func RegisterThirdApiServer(s *grpc.Server, srv ThirdApiServer) {
	s.RegisterService(&_ThirdApi_serviceDesc, srv)
}

func _ThirdApi_SendSmsMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdApiServer).SendSmsMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ThirdApi/SendSmsMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdApiServer).SendSmsMessage(ctx, req.(*SmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdApi_SendSmsCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdApiServer).SendSmsCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ThirdApi/SendSmsCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdApiServer).SendSmsCode(ctx, req.(*SmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdApi_VerifySmsCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdApiServer).VerifySmsCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ThirdApi/VerifySmsCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdApiServer).VerifySmsCode(ctx, req.(*SmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdApi_VerifyIdcard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoVerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdApiServer).VerifyIdcard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ThirdApi/VerifyIdcard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdApiServer).VerifyIdcard(ctx, req.(*InfoVerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThirdApi_VerifyBankcard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoVerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdApiServer).VerifyBankcard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ThirdApi/VerifyBankcard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdApiServer).VerifyBankcard(ctx, req.(*InfoVerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ThirdApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ThirdApi",
	HandlerType: (*ThirdApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendSmsMessage",
			Handler:    _ThirdApi_SendSmsMessage_Handler,
		},
		{
			MethodName: "SendSmsCode",
			Handler:    _ThirdApi_SendSmsCode_Handler,
		},
		{
			MethodName: "VerifySmsCode",
			Handler:    _ThirdApi_VerifySmsCode_Handler,
		},
		{
			MethodName: "VerifyIdcard",
			Handler:    _ThirdApi_VerifyIdcard_Handler,
		},
		{
			MethodName: "VerifyBankcard",
			Handler:    _ThirdApi_VerifyBankcard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "thirdapi.proto",
}

func init() { proto1.RegisterFile("thirdapi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 495 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0x4d, 0x8f, 0x93, 0x50,
	0x14, 0x85, 0xd2, 0x32, 0x70, 0xfb, 0x31, 0xcc, 0xd3, 0x18, 0xd2, 0xd1, 0xd8, 0x10, 0x17, 0xcd,
	0x2c, 0x6a, 0x9c, 0x59, 0x99, 0xe8, 0xa2, 0x43, 0x89, 0x21, 0xd6, 0x2e, 0x00, 0x6b, 0x5c, 0x91,
	0x37, 0xe5, 0xd5, 0x79, 0x19, 0xca, 0x43, 0x78, 0x4c, 0xd2, 0x95, 0x0b, 0xff, 0x86, 0xff, 0xc2,
	0x3f, 0x68, 0xde, 0x03, 0x5a, 0x13, 0xe3, 0xc7, 0xc6, 0xd5, 0xeb, 0x39, 0xf7, 0x9e, 0x7b, 0xcf,
	0x2d, 0x07, 0x46, 0xfc, 0x96, 0x16, 0x09, 0xce, 0xe9, 0x2c, 0x2f, 0x18, 0x67, 0xa8, 0x27, 0x1f,
	0xa7, 0x07, 0xda, 0x8a, 0xa6, 0xce, 0x63, 0xe8, 0x5e, 0x33, 0x96, 0xa2, 0x87, 0xd0, 0xbb, 0xc7,
	0x69, 0x45, 0x6c, 0x75, 0xa2, 0x4e, 0x8d, 0xa0, 0x06, 0xce, 0x17, 0x80, 0x70, 0x57, 0x06, 0xe4,
	0x73, 0x45, 0x4a, 0x8e, 0x9e, 0x00, 0xe4, 0xb7, 0x2c, 0x23, 0x71, 0x4a, 0x4b, 0x6e, 0xab, 0x13,
	0x6d, 0x6a, 0x06, 0xa6, 0x64, 0x96, 0xb4, 0xe4, 0xc8, 0x86, 0x93, 0x0d, 0xcb, 0x38, 0xc9, 0xb8,
	0xdd, 0x99, 0xa8, 0x53, 0x33, 0x68, 0x21, 0x42, 0xd0, 0xdd, 0xb0, 0x84, 0xd8, 0x9a, 0xa4, 0xe5,
	0x6f, 0xf4, 0x0c, 0x46, 0xe2, 0x8d, 0xef, 0x71, 0x4a, 0x93, 0x38, 0xa9, 0x0a, 0xbb, 0x3b, 0x51,
	0xa7, 0x5a, 0x30, 0x10, 0xec, 0x5a, 0x90, 0x8b, 0xaa, 0x70, 0xbe, 0xaa, 0x70, 0xe6, 0x67, 0x5b,
	0xb6, 0x26, 0x05, 0xdd, 0xee, 0x5b, 0x23, 0xe7, 0x60, 0xd2, 0x64, 0x83, 0x8b, 0x24, 0xce, 0x98,
	0x34, 0x6c, 0x06, 0x46, 0x4d, 0xac, 0x18, 0x1a, 0x83, 0x51, 0x10, 0x9c, 0x66, 0x78, 0x47, 0x1a,
	0x1f, 0x07, 0x8c, 0x9e, 0x42, 0xff, 0x06, 0x67, 0x77, 0xad, 0xb4, 0xf6, 0x03, 0x2d, 0xb5, 0x62,
	0xe2, 0x6f, 0x90, 0x07, 0x49, 0x33, 0x66, 0x50, 0x03, 0xe7, 0x15, 0xe8, 0xbe, 0x1c, 0x8f, 0x1e,
	0x81, 0x2e, 0xde, 0xc3, 0xda, 0x06, 0xfd, 0x69, 0xa9, 0xf3, 0x5d, 0x05, 0xe3, 0xba, 0x59, 0xf1,
	0x1f, 0xad, 0x9f, 0x83, 0x29, 0x8b, 0x7c, 0x9f, 0xb7, 0xf6, 0x0d, 0x41, 0x44, 0xfb, 0x9c, 0x88,
	0xc9, 0xa2, 0x55, 0x4e, 0xee, 0xd5, 0xb5, 0x16, 0x1f, 0x6f, 0xd6, 0x7f, 0xba, 0xf9, 0x62, 0x06,
	0x7a, 0x84, 0xcb, 0x3b, 0x3f, 0x41, 0x27, 0xa0, 0xcd, 0x97, 0x4b, 0x4b, 0x41, 0x03, 0x30, 0xdc,
	0xc5, 0x5b, 0xef, 0x63, 0xec, 0x2f, 0x2c, 0x15, 0x0d, 0xc1, 0xf4, 0x57, 0x6b, 0x3f, 0xf2, 0x04,
	0xec, 0x5c, 0x5c, 0x01, 0xbc, 0xa1, 0x5b, 0x1e, 0x72, 0xcc, 0xab, 0x12, 0x59, 0x30, 0xf8, 0x30,
	0xf7, 0xa3, 0x38, 0xf0, 0x5c, 0xcf, 0x5f, 0x7b, 0x96, 0x82, 0x1e, 0xc0, 0x69, 0x03, 0xe2, 0xf0,
	0xbd, 0xeb, 0x7a, 0x61, 0x68, 0xa9, 0x97, 0xdf, 0x3a, 0x60, 0x44, 0x22, 0x9e, 0xf3, 0x9c, 0xa2,
	0x4b, 0x18, 0x85, 0x24, 0x4b, 0xc2, 0x5d, 0xf9, 0x8e, 0x94, 0x25, 0xfe, 0x44, 0xd0, 0x59, 0x1d,
	0xd9, 0xd9, 0x31, 0x83, 0xe3, 0x7e, 0x43, 0x89, 0xd0, 0x3a, 0x0a, 0x7a, 0x0e, 0xfd, 0x46, 0xe3,
	0x8a, 0x50, 0xfd, 0x5d, 0xf0, 0x02, 0x86, 0x75, 0x96, 0xfe, 0x5d, 0xf2, 0x12, 0x06, 0xb5, 0xa4,
	0xc9, 0x80, 0xdd, 0x94, 0x7f, 0xc9, 0xe5, 0x78, 0xd8, 0x56, 0x64, 0xa3, 0xa3, 0xa0, 0xd7, 0x30,
	0xaa, 0x3b, 0x0e, 0xdf, 0xff, 0xf7, 0xe2, 0xd3, 0x76, 0x6b, 0xd3, 0xea, 0x28, 0x37, 0xba, 0x64,
	0xae, 0x7e, 0x04, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x96, 0x11, 0x8b, 0xc3, 0x03, 0x00, 0x00,
}
